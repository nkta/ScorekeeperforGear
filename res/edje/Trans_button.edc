#define BUTTON_MIN_WIDTH 50
#define BUTTON_MIN_HEIGHT 50
#define BUTTON_PADDING_LEFT_RIGHT 8
#define BUTTON_ICON_HEIGHT 40
#define BUTTON_ICON_WIDTH 40
#define BUTTON_TEXT_SIZE 70

#define STYLE_TAGS \
tag:  "br" "\n";\
tag:  "ps" "ps";\
tag:  "tab" "\t";\
tag:  "b" "+ font_weight=Bold";

styles {
   style { name: "button_main";
      base: "font=Tizen:style=Regular font_size="BUTTON_TEXT_SIZE" color=#ffffff ellipsis=1.0";
      STYLE_TAGS
   }
   style { name: "button_main_dim";
      base: "font=Tizen:style=Regular font_size="BUTTON_TEXT_SIZE" color=#ffffff ellipsis=1.0";
      STYLE_TAGS
   }
   style { name: "button_main_press";
      base: "font=Tizen:style=Regular font_size="BUTTON_TEXT_SIZE" color=#ffffff ellipsis=1.0";
      STYLE_TAGS
   }
}
collections {
   base_scale: 1.8;
   group { name: "elm/button/base/customized";
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "base";
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_MIN_WIDTH BUTTON_MIN_HEIGHT;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               visible: 0 ;
            }
         }
         part { name: "bg";
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";

            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible:0;
            }
         }
         part { name: "padding_left_top";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel2.relative: 0.0 0.0;
               min: BUTTON_PADDING_LEFT_RIGHT 0;
               fixed: 1 1;
            }
         }
         part { name: "padding_right_bottom";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               rel1.relative: 1.0 1.0;
               min: BUTTON_PADDING_LEFT_RIGHT 0;
               fixed: 1 1;
            }
         }
         part { name: "icon_rect";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 1.0;
                  to: "padding_left_top";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to_x: "padding_left_top";
                  to_y: "padding_right_bottom";
               }
               min: 0 0;
               fixed: 1 1;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: BUTTON_ICON_HEIGHT BUTTON_ICON_WIDTH;
               max: BUTTON_ICON_HEIGHT BUTTON_ICON_WIDTH;
               fixed: 1 1;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 1.0;
                  to: "padding_left_top";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to_x: "padding_left_top";
                  to_y: "padding_right_bottom";
               }
               fixed: 1 0;
            }
            description { state: "visible" 0.0;
               fixed: 1 1;
               min: BUTTON_ICON_HEIGHT BUTTON_ICON_WIDTH;
               align: 1.0 0.5;
               rel1 {
                  relative: 0.0 1.0;
                  to_x: "elm.text";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to_x: "elm.text";
                  to_y: "padding_right_bottom";
               }
            }
            description { state: "icononly" 0.0;
               min: BUTTON_ICON_HEIGHT BUTTON_ICON_WIDTH;
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1 {
                  relative: 1.0 1.0;
                  to_x: "icon_rect";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to: "padding_right_bottom";
               }
               text {
                  max: 1 0;
                  style: "button_main";
               }
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               text.style: "button_main_press";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               text.style: "button_main_dim";
            }
            description { state: "invisible" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "event";
            scale: 1;
            type: RECT;
            description { state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program { name: "clicked";
            signal: "mouse,clicked,1";
            source: "event";
            script {
               new st[31];
               new Float:vl;
               if (get_int(multi_down) == 0) {
                  get_state(PART:"bg", st, 30, vl);
                  if (strcmp(st, "disabled")) {
                     emit("elm,action,click", "");
                  }
               }
            }
         }
      }
   }
}